// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_APIS.Contex;

#nullable disable

namespace web_APIS.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("web_APIS.Models.Comentario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("videoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("videoID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("web_APIS.Models.LIkes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("VideoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("VideoID");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("web_APIS.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pasword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("web_APIS.Models.Videos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Archivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("web_APIS.Models.visual", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("VideoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("VideoID");

                    b.ToTable("visuals");
                });

            modelBuilder.Entity("web_APIS.Models.Comentario", b =>
                {
                    b.HasOne("web_APIS.Models.Videos", "video")
                        .WithMany("Comentarios")
                        .HasForeignKey("videoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("video");
                });

            modelBuilder.Entity("web_APIS.Models.LIkes", b =>
                {
                    b.HasOne("web_APIS.Models.Usuario", "Usuario")
                        .WithMany("LIkes")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_APIS.Models.Videos", "Video")
                        .WithMany("LIkes")
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("web_APIS.Models.Videos", b =>
                {
                    b.HasOne("web_APIS.Models.Usuario", "Usuario")
                        .WithMany("Videos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("web_APIS.Models.visual", b =>
                {
                    b.HasOne("web_APIS.Models.Usuario", "Usuario")
                        .WithMany("visuals")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_APIS.Models.Videos", "Video")
                        .WithMany("visuals")
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("web_APIS.Models.Usuario", b =>
                {
                    b.Navigation("LIkes");

                    b.Navigation("Videos");

                    b.Navigation("visuals");
                });

            modelBuilder.Entity("web_APIS.Models.Videos", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("LIkes");

                    b.Navigation("visuals");
                });
#pragma warning restore 612, 618
        }
    }
}
